//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace TimeKeeper.WCFAdapter {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Task_1", Namespace="http://schemas.datacontract.org/2004/07/TimeKeeper.WCFAdapter")]
    public partial class Task_1 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCFAdapter.IWCFAdapter_1_0_0")]
    public interface IWCFAdapter_1_0_0 {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWCFAdapter_1_0_0/GetTaskList", ReplyAction="http://tempuri.org/IWCFAdapter_1_0_0/GetTaskListResponse")]
        System.IAsyncResult BeginGetTaskList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TimeKeeper.WCFAdapter.Task_1> EndGetTaskList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWCFAdapter_1_0_0/FinishTask", ReplyAction="http://tempuri.org/IWCFAdapter_1_0_0/FinishTaskResponse")]
        System.IAsyncResult BeginFinishTask(System.AsyncCallback callback, object asyncState);
        
        void EndFinishTask(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWCFAdapter_1_0_0Channel : TimeKeeper.WCFAdapter.IWCFAdapter_1_0_0, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTaskListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTaskListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TimeKeeper.WCFAdapter.Task_1> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TimeKeeper.WCFAdapter.Task_1>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WCFAdapter_1_0_0Client : System.ServiceModel.ClientBase<TimeKeeper.WCFAdapter.IWCFAdapter_1_0_0>, TimeKeeper.WCFAdapter.IWCFAdapter_1_0_0 {
        
        private BeginOperationDelegate onBeginGetTaskListDelegate;
        
        private EndOperationDelegate onEndGetTaskListDelegate;
        
        private System.Threading.SendOrPostCallback onGetTaskListCompletedDelegate;
        
        private BeginOperationDelegate onBeginFinishTaskDelegate;
        
        private EndOperationDelegate onEndFinishTaskDelegate;
        
        private System.Threading.SendOrPostCallback onFinishTaskCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public WCFAdapter_1_0_0Client() {
        }
        
        public WCFAdapter_1_0_0Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WCFAdapter_1_0_0Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFAdapter_1_0_0Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFAdapter_1_0_0Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetTaskListCompletedEventArgs> GetTaskListCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> FinishTaskCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TimeKeeper.WCFAdapter.IWCFAdapter_1_0_0.BeginGetTaskList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTaskList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TimeKeeper.WCFAdapter.Task_1> TimeKeeper.WCFAdapter.IWCFAdapter_1_0_0.EndGetTaskList(System.IAsyncResult result) {
            return base.Channel.EndGetTaskList(result);
        }
        
        private System.IAsyncResult OnBeginGetTaskList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((TimeKeeper.WCFAdapter.IWCFAdapter_1_0_0)(this)).BeginGetTaskList(callback, asyncState);
        }
        
        private object[] OnEndGetTaskList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TimeKeeper.WCFAdapter.Task_1> retVal = ((TimeKeeper.WCFAdapter.IWCFAdapter_1_0_0)(this)).EndGetTaskList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTaskListCompleted(object state) {
            if ((this.GetTaskListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTaskListCompleted(this, new GetTaskListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTaskListAsync() {
            this.GetTaskListAsync(null);
        }
        
        public void GetTaskListAsync(object userState) {
            if ((this.onBeginGetTaskListDelegate == null)) {
                this.onBeginGetTaskListDelegate = new BeginOperationDelegate(this.OnBeginGetTaskList);
            }
            if ((this.onEndGetTaskListDelegate == null)) {
                this.onEndGetTaskListDelegate = new EndOperationDelegate(this.OnEndGetTaskList);
            }
            if ((this.onGetTaskListCompletedDelegate == null)) {
                this.onGetTaskListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTaskListCompleted);
            }
            base.InvokeAsync(this.onBeginGetTaskListDelegate, null, this.onEndGetTaskListDelegate, this.onGetTaskListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TimeKeeper.WCFAdapter.IWCFAdapter_1_0_0.BeginFinishTask(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFinishTask(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void TimeKeeper.WCFAdapter.IWCFAdapter_1_0_0.EndFinishTask(System.IAsyncResult result) {
            base.Channel.EndFinishTask(result);
        }
        
        private System.IAsyncResult OnBeginFinishTask(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((TimeKeeper.WCFAdapter.IWCFAdapter_1_0_0)(this)).BeginFinishTask(callback, asyncState);
        }
        
        private object[] OnEndFinishTask(System.IAsyncResult result) {
            ((TimeKeeper.WCFAdapter.IWCFAdapter_1_0_0)(this)).EndFinishTask(result);
            return null;
        }
        
        private void OnFinishTaskCompleted(object state) {
            if ((this.FinishTaskCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FinishTaskCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FinishTaskAsync() {
            this.FinishTaskAsync(null);
        }
        
        public void FinishTaskAsync(object userState) {
            if ((this.onBeginFinishTaskDelegate == null)) {
                this.onBeginFinishTaskDelegate = new BeginOperationDelegate(this.OnBeginFinishTask);
            }
            if ((this.onEndFinishTaskDelegate == null)) {
                this.onEndFinishTaskDelegate = new EndOperationDelegate(this.OnEndFinishTask);
            }
            if ((this.onFinishTaskCompletedDelegate == null)) {
                this.onFinishTaskCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFinishTaskCompleted);
            }
            base.InvokeAsync(this.onBeginFinishTaskDelegate, null, this.onEndFinishTaskDelegate, this.onFinishTaskCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override TimeKeeper.WCFAdapter.IWCFAdapter_1_0_0 CreateChannel() {
            return new WCFAdapter_1_0_0ClientChannel(this);
        }
        
        private class WCFAdapter_1_0_0ClientChannel : ChannelBase<TimeKeeper.WCFAdapter.IWCFAdapter_1_0_0>, TimeKeeper.WCFAdapter.IWCFAdapter_1_0_0 {
            
            public WCFAdapter_1_0_0ClientChannel(System.ServiceModel.ClientBase<TimeKeeper.WCFAdapter.IWCFAdapter_1_0_0> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetTaskList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetTaskList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TimeKeeper.WCFAdapter.Task_1> EndGetTaskList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TimeKeeper.WCFAdapter.Task_1> _result = ((System.Collections.ObjectModel.ObservableCollection<TimeKeeper.WCFAdapter.Task_1>)(base.EndInvoke("GetTaskList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFinishTask(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("FinishTask", _args, callback, asyncState);
                return _result;
            }
            
            public void EndFinishTask(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("FinishTask", _args, result);
            }
        }
    }
}
